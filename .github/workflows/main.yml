name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # manuelles Auslösen

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Syntax Check (Flake8)
        continue-on-error: true
        run: |
          pip install flake8
          flake8 backend

      - name: Run Unit Tests
        continue-on-error: false
        run: |
          pip install pytest
          pytest backend/

  docker_build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t easyorder24-backend:${{ github.sha }} backend

      - name: Run Docker Container
        run: |
          docker run --rm -d -p 5000:5000 --name backend easyorder24-backend:${{ github.sha }}

  integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Integration Tests
        run: |
          echo "Hier könntest du Integrationstests aufrufen"
          # z.B. curl http://localhost:5000/api/test

  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: integration_test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying Docker image easyorder24-backend:${{ github.sha }} to Staging"
          # Hier könnte echtes Deployment z.B. auf Kubernetes oder Cloud erfolgen

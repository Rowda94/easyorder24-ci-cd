name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Phase 1: Build
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/easyorder24-backend:latest ./backend

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/easyorder24-backend:latest

  # Phase 2: Test
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        working-directory: ./backend
        run: pytest tests

  # Phase 3: Staging Deployment
  staging:
    name: Staging Deployment
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Kubernetes (Staging)
        run: |
          echo "ðŸš€ Staging Deployment gestartet..."
          # kubectl apply -f ./backend/deployment.yaml

  # Phase 4: Production Deployment
  production:
    name: Production Deployment (Canary)
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Kubernetes (Production - Canary)
        run: |
          echo "ðŸš€ Production Canary Deployment gestartet..."
          # kubectl apply -f ./backend/deployment-prod.yaml

  # Phase 5: Monitoring & Feedback
  monitoring:
    name: Monitoring & Feedback
    runs-on: ubuntu-latest
    needs: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Simulated Monitoring
        run: |
          echo "ðŸ“Š Monitoring gestartet..."
          echo "Prometheus Metrics abfragen..."
          echo "Grafana Dashboard aktualisieren..."
          # curl http://prometheus-server/api/v1/query?query=up
          # Optional: Alerts prÃ¼fen oder Health-Endpoint abfragen



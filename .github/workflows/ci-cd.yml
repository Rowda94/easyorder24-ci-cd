name: EasyOrder24 CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Backend Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/easyorder24-backend:latest ./backend
          docker push ghcr.io/${{ github.repository_owner }}/easyorder24-backend:latest

      - name: Build Frontend Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/easyorder24-frontend:latest ./frontend
          docker push ghcr.io/${{ github.repository_owner }}/easyorder24-frontend:latest

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          pip install -r backend/requirements.txt

      - name: Run Backend Tests
        run: |
          cd backend
          pytest

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm install
          npm test

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_STAGING }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Deploy Backend to Staging
        run: |
          kubectl apply -f k8s/staging/backend-deployment.yaml
          kubectl apply -f k8s/staging/backend-service.yaml

      - name: Deploy Frontend to Staging
        run: |
          kubectl apply -f k8s/staging/frontend-deployment.yaml
          kubectl apply -f k8s/staging/frontend-service.yaml

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_PRODUCTION }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Deploy Backend to Production
        run: |
          kubectl apply -f k8s/production/backend-deployment.yaml
          kubectl apply -f k8s/production/backend-service.yaml

      - name: Deploy Frontend to Production
        run: |
          kubectl apply -f k8s/production/frontend-deployment.yaml
          kubectl apply -f k8s/production/frontend-service.yaml








name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/easyorder24-backend:latest ./backend

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/easyorder24-backend:latest

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        pip install -r ./backend/requirements.txt

    - name: Run Unit & Integration Tests
      run: |
        pytest ./backend/tests

  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_STAGING }}" > $HOME/.kube/config

    - name: Apply Kubernetes Staging Deployment
      run: |
        kubectl apply -f ./k8s/deployment-staging.yaml
        kubectl apply -f ./k8s/service-staging.yaml

  production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: staging

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_PRODUCTION }}" > $HOME/.kube/config

    - name: Apply Kubernetes Production Deployment (Canary)
      run: |
        kubectl apply -f ./k8s/deployment-production.yaml
        kubectl apply -f ./k8s/service-production.yaml





